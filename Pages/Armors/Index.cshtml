@page
@model D2RItems.Pages.Armors.IndexModel

@{
	ViewData["Title"] = "Armor Bases";
}

<h1 class="text-center d-inline-flex">@ViewData["Title"]</h1>

<form asp-page="./Index" method="get" class="text-center">
<div class="form-actions no-color">
	<p>
		Search name:
		<input class="searchbox" type="text" name="SearchString" value="@Model.CurrentFilter" />
		<input type="submit" value="Search" class="btn-dark" />
		<a asp-page="./Index">Clear</a>
	</p>

	<div class="container" style="display:inline-flex">
		<div class="form-check">
			<div class="custom-check d-inline">
				<input type="checkbox" value="">
			</div>
			<label>
				Default checkbox
			</label>
		</div>
		<div class="form-check">
			<div class="custom-check d-inline">
				<input type="checkbox" value="">
			</div>
			<label>
				Default checkbox
			</label>
		</div>
		<div class="form-check">
			<div class="custom-check d-inline">
				<input type="checkbox" value="">
			</div>
			<label>
				Default checkbox
			</label>
		</div>
		</div>
	<select asp-for="SelectedClass" asp-items="@Model.ClassSelectList" onchange="this.form.submit()" class="bg-dark">
		<option value="">All classes</option>
	</select>
</div>    
</form>

<table class="table table-border" style="border-color:rgb(69, 69, 69, 0.4);">
	<thead class="sticky-top">
		<tr class="border-thin">
			<th class="text-center">
				<a asp-page="./Index" asp-route-sortOrder="@Model.NameSort">
					@Html.DisplayNameFor(model => model.Armors[0].Name)
				</a>
			</th>
			<th class="text-center">
				<a asp-page="./Index" asp-route-sortOrder="@Model.TierSort">
					@Html.DisplayNameFor(model => model.Armors[0].Tier)
				</a>
			</th>
			<th class="text-center">
				<a asp-page="./Index" asp-route-sortOrder="@Model.SlotSort">
					@Html.DisplayNameFor(model => model.Armors[0].Slot)
				</a>
			</th>
			<th>
				<a asp-page="./Index" asp-route-sortOrder="@Model.SocketsSort">
					@Html.DisplayNameFor(model => model.Armors[0].Sockets)
				</a>
			</th>
			<th>
				<a asp-page="./Index" asp-route-sortOrder="@Model.ClassSort">
					@Html.DisplayNameFor(model => model.Armors[0].Class)
				</a>
			</th>
			<th>
				<a asp-page="./Index" asp-route-sortOrder="@Model.WeightSort">
					@Html.DisplayNameFor(model => model.Armors[0].Weight)
				</a>
			</th>
			<th>
				<a asp-page="./Index" asp-route-sortOrder="@Model.ReqStrSort">
					@Html.DisplayNameFor(model => model.Armors[0].ReqStr)
				</a>
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Armors)
		{
			<tr>
				<td>
					<a asp-page="./Details" asp-route-id="@item.Id" id="name-col-item">
						@Html.DisplayFor(modelItem => item.Name)
					</a>
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Tier)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Slot)
				</td>
				<td class="text-center">
					@Html.DisplayFor(modelItem => item.Sockets)
				</td>
				<td class="text-center">
					@Html.DisplayFor(modelItem => item.Class)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Weight)
				</td>
				<td class="text-center">
					@Html.DisplayFor(modelItem => item.ReqStr)
				</td>
				@*<td>
			<a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
			<a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
			<a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
			</td>*@
			</tr>
		}
	</tbody>
</table>
